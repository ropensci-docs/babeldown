[{"path":"https://docs.ropensci.org/babeldown/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 babeldown authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://docs.ropensci.org/babeldown/articles/quarto.html","id":"create-and-render-a-multilingual-book","dir":"Articles","previous_headings":"","what":"Create and render a multilingual book","title":"Multilingual Quarto books with babeldown and babelquarto","text":"create book Quarto register languages. also create babelquarto-like Quarto book directly running babelquarto::quarto_multilingual_book() ’s perhaps less realistic: imagine ’s likely ’re starting existing book default language. Now let’s edit Quarto configuration. config file now looks like: can either fill delete fields title-es, description-es, author-es: babelquarto fall back English fields. author string particular, might languages, unless “team members” instead names. , can already render book two languages. point, since ’s Spanish chapter, Spanish version fall back English chapters difference language , say, “table contents”.","code":"parent_dir <- withr::local_tempdir() book_dir <- \"babelbook\" quarto_bin <- quarto::quarto_path() withr::with_dir(parent_dir, {   sys::exec_wait(     quarto_bin,     args = c(\"create-project\", book_dir, \"--type\", \"book\")   ) }) #> [1] 0 book_path <- file.path(parent_dir, book_dir) babelquarto::register_main_language(main_language = \"en\", project_path = book_path) babelquarto::register_further_languages(further_languages = \"es\", project_path = book_path) project:   type: book  book:   title: \"babelbook\"   author: \"Norah Jones\"   date: \"3/21/2024\"   chapters:     - index.qmd     - intro.qmd     - summary.qmd     - references.qmd  bibliography: references.bib  format:   html:     theme: cosmo   pdf:     documentclass: scrreprt     babelquarto:   languagecodes:   - name: es     text: \"Version in es\"   - name: en     text: \"Version in en\"   mainlanguage: 'en'   languages: ['es'] title-es: title in es description-es: description in es author-es: author in es lang: en babelquarto::render_book(book_path) # servr::httw(file.path(parent_dir, book_dir, \"_book\"))"},{"path":"https://docs.ropensci.org/babeldown/articles/quarto.html","id":"translate-multilingual-book-chapters","dir":"Articles","previous_headings":"","what":"Translate multilingual book chapters","title":"Multilingual Quarto books with babeldown and babelquarto","text":"Now let’s translate one chapters, automatically, Spanish. Ideally ’d pair creation git branch! way, translation can reviewed PR.","code":""},{"path":"https://docs.ropensci.org/babeldown/articles/quarto.html","id":"workflow-1","dir":"Articles","previous_headings":"","what":"Workflow 1","title":"Multilingual Quarto books with babeldown and babelquarto","text":"Initiate PR. Translate intro.qmd. Commit push Example PR Actually might optimal PR: might prefer first create Spanish file index.es.qmd content English file main branch, create branch translation, diff might contain difference Spanish English version, Spanish version nothing. , see workflow 2.","code":"# In practice you'd probably be inside the book project! usethis::local_project(book_path) usethis::pr_init(\"index-es\") Sys.setenv(\"DEEPL_API_URL\" = \"https://api.deepl.com\") Sys.setenv(DEEPL_API_KEY = keyring::key_get(\"deepl\")) babeldown::deepl_translate_quarto(   book_path,   \"intro.qmd\",   render = TRUE,   source_lang = \"EN\",   target_lang = \"ES\",   formality = \"less\" ) gert::git_add(\"index.es.qmd\") gert::git_commit(message = \"Translate index.qmd to Spanish\") usethis::pr_push()"},{"path":"https://docs.ropensci.org/babeldown/articles/quarto.html","id":"workflow-2","dir":"Articles","previous_headings":"","what":"Workflow 2","title":"Multilingual Quarto books with babeldown and babelquarto","text":"Duplicate file main branch. Initiate PR. Translate intro.qmd. Commit push Example PR","code":"withr::local_dir(book_path) fs::file_copy(\"index.qmd\", \"index.es.qmd\") gert::git_add(\"index.es.qmd\") gert::git_commit(\"Add placeholder index.es.qmd\") gert::git_push() # In practice you'd probably be inside the book project! usethis::local_project(book_path) usethis::pr_init(\"index-es2\") Sys.setenv(\"DEEPL_API_URL\" = \"https://api.deepl.com\") Sys.setenv(DEEPL_API_KEY = keyring::key_get(\"deepl\")) babeldown::deepl_translate_quarto(   book_path,   \"index.qmd\",   render = TRUE,   source_lang = \"EN\",   target_lang = \"ES\",   formality = \"less\",   force = TRUE ) gert::git_add(\"index.es.qmd\") gert::git_commit(message = \"Translate index.qmd to Spanish\") usethis::pr_push()"},{"path":"https://docs.ropensci.org/babeldown/articles/quarto.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Multilingual Quarto books with babeldown and babelquarto","text":"article explained can use babelquarto set render multilingual Quarto book, babeldown translate individual chapter automatically DeepL API (review edits human translators!).","code":""},{"path":"https://docs.ropensci.org/babeldown/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maëlle Salmon. Maintainer, author.","code":""},{"path":"https://docs.ropensci.org/babeldown/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Salmon M (2024). babeldown: Helpers Automatic Translation Markdown-based Content. R package version 0.0.0.9000, https://github.com/ropensci-review-tools/babeldown.","code":"@Manual{,   title = {babeldown: Helpers for Automatic Translation of Markdown-based Content},   author = {Maëlle Salmon},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://github.com/ropensci-review-tools/babeldown}, }"},{"path":"https://docs.ropensci.org/babeldown/index.html","id":"babeldown","dir":"","previous_headings":"","what":"Helpers for Automatic Translation of Markdown-based Content","title":"Helpers for Automatic Translation of Markdown-based Content","text":"goal babeldown support workflows include automatic translation Markdown-based R content, DeepL API. babeldown can translate: Markdown strings (babeldown::deepl_translate_markdown_string()) Markdown files (babeldown::deepl_translate()) general; Quarto book chapters (babeldown::deepl_translate_quarto()) Hugo blog posts (babeldown::deepl_translate_hugo()) particular. babeldown can also update translations, see babeldown::deepl_update().","code":""},{"path":"https://docs.ropensci.org/babeldown/index.html","id":"installation-and-setup","dir":"","previous_headings":"","what":"Installation and setup","title":"Helpers for Automatic Translation of Markdown-based Content","text":"can install development version babeldown rOpenSci R-universe: GitHub :","code":"install.packages('babeldown', repos = c('https://ropensci.r-universe.dev', 'https://cloud.r-project.org')) # install.packages(\"pak\") pak::pak(\"ropensci-review-tools/babeldown\")"},{"path":"https://docs.ropensci.org/babeldown/index.html","id":"api-url","dir":"","previous_headings":"Installation and setup","what":"API URL","title":"Helpers for Automatic Translation of Markdown-based Content","text":"DeepL API URL depends API plan. babeldown uses DeepL free API URL default. use Pro plan, set API URL via","code":"Sys.setenv(\"DEEPL_API_URL\" = \"https://api.deepl.com\")"},{"path":"https://docs.ropensci.org/babeldown/index.html","id":"api-key","dir":"","previous_headings":"Installation and setup","what":"API key","title":"Helpers for Automatic Translation of Markdown-based Content","text":"Set API key via environment variable DEEPL_API_KEY. store keyring package retrieve like :","code":"Sys.setenv(DEEPL_API_KEY = keyring::key_get(\"deepl\"))"},{"path":"https://docs.ropensci.org/babeldown/index.html","id":"line-wrapping","dir":"","previous_headings":"Installation and setup","what":"Line wrapping","title":"Helpers for Automatic Translation of Markdown-based Content","text":"recommend start new line Markdown document sentence sentence part (comma instance), informative Git diffs. also recommend starting new line middle something ’s square brackets (particular references -line footnotes) break way babeldown tries protect .","code":""},{"path":"https://docs.ropensci.org/babeldown/index.html","id":"rstudio-visual-editor","dir":"","previous_headings":"Installation and setup > Line wrapping","what":"RStudio Visual Editor","title":"Helpers for Automatic Translation of Markdown-based Content","text":"use RStudio Visual Editor, can choose “sentence” line-wrapping option.","code":""},{"path":"https://docs.ropensci.org/babeldown/index.html","id":"troubleshooting","dir":"","previous_headings":"","what":"Troubleshooting","title":"Helpers for Automatic Translation of Markdown-based Content","text":"Getting HTTP error 456 means ’ve used API credits. Use deepl_usage() (online DeepL API interface) get usage data. DeepL API might mix punctuation, instance:","code":"babeldown::deepl_translate_markdown_string(   \"[So _incredibly_ **wonderful**](https://ropensci.org)!\",   source_lang = \"EN\",   target_lang = \"ES\" ) #> [1] \"[Así que *increíblemente* **maravilloso**](https://ropensci.org) ¡!\" babeldown::deepl_translate_markdown_string(   \"[So _incredibly_ **wonderful**!](https://ropensci.org)\",   source_lang = \"EN\",   target_lang = \"ES\" ) #> [1] \"[Así que *increíblemente* **maravilloso** ¡!](https://ropensci.org)\" babeldown::deepl_translate_markdown_string(   \"[So _incredibly_ **wonderful!**](https://ropensci.org)\",   source_lang = \"EN\",   target_lang = \"ES\" ) #> [1] \"[Así que *increíblemente* **¡maravilloso!**](https://ropensci.org)\""},{"path":[]},{"path":"https://docs.ropensci.org/babeldown/index.html","id":"markdown-string-translation","dir":"","previous_headings":"Examples","what":"Markdown string translation","title":"Helpers for Automatic Translation of Markdown-based Content","text":"","code":"babeldown::deepl_translate_markdown_string(   \"[So _incredibly_ **wonderful**](https://ropensci.org)\",   source_lang = \"EN\",   target_lang = \"ES\" ) #> [1] \"[Así que *increíblemente* **maravilloso**](https://ropensci.org)\""},{"path":"https://docs.ropensci.org/babeldown/index.html","id":"file-translation","dir":"","previous_headings":"Examples","what":"File translation","title":"Helpers for Automatic Translation of Markdown-based Content","text":"can also indicate YAML fields translate, using yaml_fields argument. default, title description translated.","code":"english_lines <- c(   \"## A cool section\", \"\",   \"This is the first paragraph. `system.file()` is cool, right?\", \"\",   \"Another paragraph. I really enjoy developing R packages.\", \"\",   \"Do you enjoy debugging?\" ) file <- withr::local_tempfile() brio::write_lines(english_lines, file)  out_path <- withr::local_tempfile()  babeldown::deepl_translate(   path = file,   out_path = out_path,   source_lang = \"EN\",   target_lang = \"ES\",   formality = \"less\" )  readLines(out_path) #> [1] \"## Una sección genial\"                                        #> [2] \"\"                                                             #> [3] \"Este es el primer párrafo. `system.file()` es guay, ¿verdad?\" #> [4] \"\"                                                             #> [5] \"Otro párrafo. Me gusta mucho desarrollar paquetes de R.\"      #> [6] \"\"                                                             #> [7] \"¿Disfrutas depurando?\"                                        #> [8] \"\"                                                             #> [9] \"\" english_lines <- c(   \"---\",   \"title: Nice document\",   \"description: An example for sure\",   \"---\",   \"## A cool section\", \"\",   \"This is the first paragraph. `system.file()` is cool, right?\", \"\",   \"Another paragraph. I really enjoy developing R packages.\", \"\",   \"Do you enjoy debugging?\" ) file <- withr::local_tempfile() brio::write_lines(english_lines, file)  out_path <- withr::local_tempfile()  babeldown::deepl_translate(   path = file,   out_path = out_path,   source_lang = \"EN\",   target_lang = \"ES\",   formality = \"less\" )  readLines(out_path) #>  [1] \"---\"                                                          #>  [2] \"title: Buen documento\"                                        #>  [3] \"description: Un ejemplo seguro\"                               #>  [4] \"---\"                                                          #>  [5] \"\"                                                             #>  [6] \"## Una sección genial\"                                        #>  [7] \"\"                                                             #>  [8] \"Este es el primer párrafo. `system.file()` es guay, ¿verdad?\" #>  [9] \"\"                                                             #> [10] \"Otro párrafo. Me gusta mucho desarrollar paquetes de R.\"      #> [11] \"\"                                                             #> [12] \"¿Disfrutas depurando?\"                                        #> [13] \"\"                                                             #> [14] \"\""},{"path":"https://docs.ropensci.org/babeldown/index.html","id":"glossary-creation-or-update","dir":"","previous_headings":"Examples","what":"Glossary creation or update","title":"Helpers for Automatic Translation of Markdown-based Content","text":"","code":"filename <- system.file(\"example-es-en.csv\", package = \"babeldown\")  # file contents for info readr::read_csv(filename, show_col_types = FALSE) #> # A tibble: 2 × 2 #>   Spanish     English    #>   <chr>       <chr>      #> 1 paquete     package    #> 2 repositorio repository  # create (or update) glossary babeldown::deepl_upsert_glossary(   filename,   glossary_name = \"rstats-glosario\",   target_lang = \"Spanish\",   source_lang = \"English\" ) #> Updating glossary rstats-glosario"},{"path":"https://docs.ropensci.org/babeldown/index.html","id":"file-translation-with-glossary","dir":"","previous_headings":"Examples","what":"File translation with glossary","title":"Helpers for Automatic Translation of Markdown-based Content","text":"","code":"file <- withr::local_tempfile() brio::write_lines(english_lines, file)  out_path <- withr::local_tempfile()  babeldown::deepl_translate(   path = file,   out_path = out_path,   source_lang = \"EN\",   target_lang = \"ES\",   formality = \"less\",   glossary = \"rstats-glosario\" )  readLines(out_path) #>  [1] \"---\"                                                          #>  [2] \"title: Buen documento\"                                        #>  [3] \"description: Un ejemplo seguro\"                               #>  [4] \"---\"                                                          #>  [5] \"\"                                                             #>  [6] \"## Una sección genial\"                                        #>  [7] \"\"                                                             #>  [8] \"Este es el primer párrafo. `system.file()` es guay, ¿verdad?\" #>  [9] \"\"                                                             #> [10] \"Otro párrafo. Me gusta mucho desarrollar paquetes de R.\"      #> [11] \"\"                                                             #> [12] \"¿Disfrutas depurando?\"                                        #> [13] \"\"                                                             #> [14] \"\""},{"path":"https://docs.ropensci.org/babeldown/index.html","id":"quarto-book-chapters","dir":"","previous_headings":"Examples","what":"Quarto book chapters","title":"Helpers for Automatic Translation of Markdown-based Content","text":"can use babeldown translate chapters Quarto multilingual book set babelquarto. See article describing workflow.","code":""},{"path":"https://docs.ropensci.org/babeldown/index.html","id":"hugo-posts","dir":"","previous_headings":"Examples","what":"Hugo posts","title":"Helpers for Automatic Translation of Markdown-based Content","text":"can also use babeldown translate blog posts Hugo multilingual website using leaf bundles (posts index.md inside content subfolder) saving translations along (instance Spanish post index.es.md inside subfolder). See babeldown::deepl_translate_hugo(). Hugo website set differently, either open issue use babeldown::deepl_translate().","code":""},{"path":"https://docs.ropensci.org/babeldown/index.html","id":"hugo-shortcodes","dir":"","previous_headings":"Examples > Hugo posts","what":"Hugo shortcodes","title":"Helpers for Automatic Translation of Markdown-based Content","text":"Hugo shortcodes supported flexibly: need use param=\"value\" space, double quotes.","code":""},{"path":"https://docs.ropensci.org/babeldown/reference/babeldown-package.html","id":null,"dir":"Reference","previous_headings":"","what":"babeldown: Helpers for Automatic Translation of Markdown-based Content — babeldown-package","title":"babeldown: Helpers for Automatic Translation of Markdown-based Content — babeldown-package","text":"Provide workflows guidance automatic translation Markdown-based R content using DeepL API.","code":""},{"path":"https://docs.ropensci.org/babeldown/reference/babeldown-package.html","id":"api-url","dir":"Reference","previous_headings":"","what":"API URL","title":"babeldown: Helpers for Automatic Translation of Markdown-based Content — babeldown-package","text":"DeepL API URL depends API plan. babeldown uses DeepL free API URL default. use Pro plan, set API URL via","code":"Sys.setenv(\"DEEPL_API_URL\" = \"https://api.deepl.com\")"},{"path":"https://docs.ropensci.org/babeldown/reference/babeldown-package.html","id":"api-key","dir":"Reference","previous_headings":"","what":"API key","title":"babeldown: Helpers for Automatic Translation of Markdown-based Content — babeldown-package","text":"Set API key via environment variable DEEPL_API_KEY. store keyring package retrieve like :","code":"Sys.setenv(DEEPL_API_KEY = keyring::key_get(\"deepl\"))"},{"path":[]},{"path":"https://docs.ropensci.org/babeldown/reference/babeldown-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"babeldown: Helpers for Automatic Translation of Markdown-based Content — babeldown-package","text":"Maintainer: Maëlle Salmon msmaellesalmon@gmail.com (ORCID)","code":""},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_languages.html","id":null,"dir":"Reference","previous_headings":"","what":"Languages supported by DeepL API — deepl_languages","title":"Languages supported by DeepL API — deepl_languages","text":"Languages supported DeepL API","code":""},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_languages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Languages supported by DeepL API — deepl_languages","text":"","code":"deepl_languages(type = c(\"target\", \"source\"))"},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_languages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Languages supported by DeepL API — deepl_languages","text":"type Either \"target\" \"source\"","code":""},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_languages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Languages supported by DeepL API — deepl_languages","text":"data.frame languages (language code \"language\", name \"name\", whether formality supported \"supports_formality\").","code":""},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_languages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Languages supported by DeepL API — deepl_languages","text":"","code":"if (FALSE) { deepl_languages(type = \"source\") deepl_languages(type = \"target\") }"},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_translate.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate a Markdown file — deepl_translate","title":"Translate a Markdown file — deepl_translate","text":"Translate Markdown file","code":""},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_translate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate a Markdown file — deepl_translate","text":"","code":"deepl_translate(   path,   out_path,   yaml_fields = c(\"title\", \"description\"),   glossary_name = NULL,   source_lang = NULL,   target_lang = NULL,   formality = c(\"default\", \"more\", \"less\", \"prefer_more\", \"prefer_less\") )"},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_translate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate a Markdown file — deepl_translate","text":"path Path Markdown file translated (character). out_path Path new translated file saved (character). yaml_fields Vector character names YAML fields translate. glossary_name Name glossary used, (character). source_lang Name code source language. See DeepL docs. target_lang Name code source language. See DeepL docs. formality Formality level use (character), one \"default\" (default) \"less\" -- informal language \"prefer_more\" -- formal language available, otherwise fallback default formality \"prefer_less\" -- informal language available, otherwise fallback default formality","code":""},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_translate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate a Markdown file — deepl_translate","text":"None","code":""},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_translate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate a Markdown file — deepl_translate","text":"","code":"if (FALSE) { english_lines <- c(   \"## A cool section\", \"\",   \"This is the first paragraph. `system.file()` is cool, right?\", \"\",   \"Another paragraph. I really enjoy developing R packages.\", \"\",   \"Do you enjoy debugging?\" ) file <- withr::local_tempfile() brio::write_lines(english_lines, file) out_path <- withr::local_tempfile() babeldown::deepl_translate(   path = file,   out_path = out_path,   source_lang = \"EN\",   target_lang = \"ES\",   formality = \"less\" ) readLines(out_path) }"},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_translate_hugo.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate a Hugo post — deepl_translate_hugo","title":"Translate a Hugo post — deepl_translate_hugo","text":"translates Markdown content including \"alt\", \"caption\", \"title\" fields shortcodes. translates title, update slug. assumes Hugo website uses YAML metadata top posts; leaf bundles (post folder, leaf-bundle/index.md); multilingualism post say Spanish lives leaf-bundle/index.es.md.","code":""},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_translate_hugo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate a Hugo post — deepl_translate_hugo","text":"","code":"deepl_translate_hugo(   post_path = NULL,   force = FALSE,   yaml_fields = c(\"title\", \"description\"),   glossary_name = NULL,   source_lang = NULL,   target_lang = NULL,   formality = c(\"default\", \"more\", \"less\", \"prefer_more\", \"prefer_less\") )"},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_translate_hugo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate a Hugo post — deepl_translate_hugo","text":"post_path Path post. RStudio IDE installed, default currently open document. use Quarto R Markdown Hugo, translate source file (qmd Rmd) render Markdown. force Whether overwrite post target language. yaml_fields Vector character names YAML fields translate. glossary_name Name glossary used, (character). source_lang Name code source language. See DeepL docs. target_lang Name code source language. See DeepL docs. formality Formality level use (character), one \"default\" (default) \"less\" -- informal language \"prefer_more\" -- formal language available, otherwise fallback default formality \"prefer_less\" -- informal language available, otherwise fallback default formality","code":""},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_translate_hugo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate a Hugo post — deepl_translate_hugo","text":"None","code":""},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_translate_hugo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate a Hugo post — deepl_translate_hugo","text":"","code":"if (FALSE) { dir <- withr::local_tempdir() blogdown::new_site(dir = dir) deepl_translate_hugo(   file.path(dir, \"content\", \"post\", \"2016-12-30-hello-markdown\", \"index.md\"),   source_lang = \"en\",   target_lang = \"fr\",   formality = \"less\" ) readLines(file.path(dir, \"content\", \"post\", \"2016-12-30-hello-markdown\", \"index.fr.md\")) }"},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_translate_markdown_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate Markdown string — deepl_translate_markdown_string","title":"Translate Markdown string — deepl_translate_markdown_string","text":"Translate Markdown string","code":""},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_translate_markdown_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate Markdown string — deepl_translate_markdown_string","text":"","code":"deepl_translate_markdown_string(   markdown_string,   glossary_name = NULL,   source_lang,   target_lang,   formality = c(\"default\", \"more\", \"less\", \"prefer_more\", \"prefer_less\") )"},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_translate_markdown_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate Markdown string — deepl_translate_markdown_string","text":"markdown_string Markdown string translate glossary_name Name glossary used, (character). source_lang Name code source language. See DeepL docs. target_lang Name code source language. See DeepL docs. formality Formality level use (character), one \"default\" (default) \"less\" -- informal language \"prefer_more\" -- formal language available, otherwise fallback default formality \"prefer_less\" -- informal language available, otherwise fallback default formality","code":""},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_translate_markdown_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate Markdown string — deepl_translate_markdown_string","text":"Translated Markdown string","code":""},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_translate_markdown_string.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate Markdown string — deepl_translate_markdown_string","text":"","code":"if (FALSE) { deepl_translate_markdown_string(   \"[So _incredibly_ **wonderful**](https://ropensci.org)!\",   source_lang = \"EN\",   target_lang = \"FR\",   formality = \"less\" ) }"},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_translate_quarto.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate a Quarto book chapter — deepl_translate_quarto","title":"Translate a Quarto book chapter — deepl_translate_quarto","text":"assumes book set à la babelquarto.","code":""},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_translate_quarto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate a Quarto book chapter — deepl_translate_quarto","text":"","code":"deepl_translate_quarto(   book_path,   chapter,   force = FALSE,   render = TRUE,   yaml_fields = c(\"title\", \"description\"),   glossary_name = NULL,   source_lang = NULL,   target_lang = NULL,   formality = c(\"default\", \"more\", \"less\", \"prefer_more\", \"prefer_less\") )"},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_translate_quarto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate a Quarto book chapter — deepl_translate_quarto","text":"book_path Path book source chapter Chapter name force Whether overwrite chapter target language. render Whether run babelquarto::render_bool() translation. yaml_fields Vector character names YAML fields translate. glossary_name Name glossary used, (character). source_lang Name code source language. See DeepL docs. target_lang Name code source language. See DeepL docs. formality Formality level use (character), one \"default\" (default) \"less\" -- informal language \"prefer_more\" -- formal language available, otherwise fallback default formality \"prefer_less\" -- informal language available, otherwise fallback default formality","code":""},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_translate_quarto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate a Quarto book chapter — deepl_translate_quarto","text":"None","code":""},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_translate_quarto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate a Quarto book chapter — deepl_translate_quarto","text":"","code":"if (FALSE) { temp_dir <- withr::local_tempdir() babelquarto::quarto_multilingual_book(   parent_dir = temp_dir,   book_dir = \"blop\",   main_language = \"en\",   further_languages = \"es\" ) book_path <- file.path(temp_dir, \"blop\") deepl_translate_quarto(   book_path = book_path,   chapter = \"intro.qmd\",   force = TRUE, # the existing chapter is a placeholder   render = TRUE,   source_lang = \"EN\",   target_lang = \"ES\",   formality = \"less\" ) # have a look at the translation readLines(file.path(book_path, \"intro.es.qmd\")) # servr::httw(file.path(book_path, \"_book\")) }"},{"path":[]},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_translate_vtt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate a VTT subtitles file — deepl_translate_vtt","text":"","code":"deepl_translate_vtt(   path,   out_path,   glossary_name = NULL,   source_lang = NULL,   target_lang = NULL,   formality = c(\"default\", \"more\", \"less\", \"prefer_more\", \"prefer_less\") )"},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_translate_vtt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate a VTT subtitles file — deepl_translate_vtt","text":"path Path Markdown file translated (character). out_path Path new translated file saved (character). glossary_name Name glossary used, (character). source_lang Name code source language. See DeepL docs. target_lang Name code source language. See DeepL docs. formality Formality level use (character), one \"default\" (default) \"less\" -- informal language \"prefer_more\" -- formal language available, otherwise fallback default formality \"prefer_less\" -- informal language available, otherwise fallback default formality","code":""},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_translate_vtt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate a VTT subtitles file — deepl_translate_vtt","text":"None","code":""},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_translate_vtt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate a VTT subtitles file — deepl_translate_vtt","text":"","code":"if (FALSE) { vtt <- system.file(\"pecan.vtt\", package = \"babeldown\") temp_dir <- withr::local_tempdir() deepl_translate_vtt(   vtt,   out_path = file.path(temp_dir, \"pecan.es.vtt\"),   source_lang = \"EN\",   target_lang = \"ES\",   formality = \"less\" ) head(readLines(file.path(temp_dir, \"pecan.es.vtt\"))) }"},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a translation of a file in a Git repo — deepl_update","title":"Update a translation of a file in a Git repo — deepl_update","text":"Re-use existing translation possible (node level: paragraph, heading, etc.)","code":""},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a translation of a file in a Git repo — deepl_update","text":"","code":"deepl_update(   path,   out_path,   yaml_fields = c(\"title\", \"description\"),   glossary_name = NULL,   source_lang = NULL,   target_lang = NULL,   formality = c(\"default\", \"more\", \"less\", \"prefer_more\", \"prefer_less\") )"},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a translation of a file in a Git repo — deepl_update","text":"path Path Markdown file translated (character). out_path Path new translated file saved (character). yaml_fields Vector character names YAML fields translate. glossary_name Name glossary used, (character). source_lang Name code source language. See DeepL docs. target_lang Name code source language. See DeepL docs. formality Formality level use (character), one \"default\" (default) \"less\" -- informal language \"prefer_more\" -- formal language available, otherwise fallback default formality \"prefer_less\" -- informal language available, otherwise fallback default formality","code":""},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a translation of a file in a Git repo — deepl_update","text":"None","code":""},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_update.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update a translation of a file in a Git repo — deepl_update","text":"function looks latest commit updated source file, latest commit updated target file. target file updated later source file, time, nothing happens: might need reorder Git history rebase instance.","code":""},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_upsert_glossary.html","id":null,"dir":"Reference","previous_headings":"","what":"Create or update glossary — deepl_upsert_glossary","title":"Create or update glossary — deepl_upsert_glossary","text":"Create update glossary","code":""},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_upsert_glossary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create or update glossary — deepl_upsert_glossary","text":"","code":"deepl_upsert_glossary(filename, glossary_name = NULL, source_lang, target_lang)"},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_upsert_glossary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create or update glossary — deepl_upsert_glossary","text":"filename Name glossary file. See DeepL docs supported formats. babeldown stricter: columns need named like source_lang target_lang. glossary_name Name glossary. Defaults filename without extension. source_lang Name code source language. See DeepL docs. target_lang Name code source language. See DeepL docs.","code":""},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_upsert_glossary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create or update glossary — deepl_upsert_glossary","text":"glossary ID","code":""},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_upsert_glossary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create or update glossary — deepl_upsert_glossary","text":"","code":"if (FALSE) { deepl_upsert_glossary(   system.file(\"example-es-en.csv\", package = \"babeldown\"),   glossary_name = \"rstats-glosario\",   target_lang = \"Spanish\",   source_lang = \"English\" ) }"},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_usage.html","id":null,"dir":"Reference","previous_headings":"","what":"Get DeepL API usage data — deepl_usage","title":"Get DeepL API usage data — deepl_usage","text":"Get DeepL API usage data","code":""},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_usage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get DeepL API usage data — deepl_usage","text":"","code":"deepl_usage()"},{"path":"https://docs.ropensci.org/babeldown/reference/deepl_usage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get DeepL API usage data — deepl_usage","text":"list DeepL API usage data, depending account type.","code":""}]
